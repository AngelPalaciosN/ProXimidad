#!/usr/bin/env python
import os
import sys
import django

# Configurar Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from proximidad_app.models import Servicios, Categoria

def crear_servicios_prueba():
    """Crea servicios de prueba para testing"""
    
    # Crear o obtener categor√≠as
    categorias_data = [
        {'nombre': 'Tecnolog√≠a', 'descripcion': 'Servicios relacionados con tecnolog√≠a'},
        {'nombre': 'Hogar', 'descripcion': 'Servicios para el hogar'},
        {'nombre': 'Salud', 'descripcion': 'Servicios de salud y bienestar'},
        {'nombre': 'Educaci√≥n', 'descripcion': 'Servicios educativos'},
        {'nombre': 'Transporte', 'descripcion': 'Servicios de transporte'},
    ]
    
    categorias = {}
    for cat_data in categorias_data:
        categoria, created = Categoria.objects.get_or_create(
            nombre_categoria=cat_data['nombre'],
            defaults={'descripcion_categoria': cat_data['descripcion'], 'activo': True}
        )
        categorias[cat_data['nombre']] = categoria
        if created:
            print(f"‚úÖ Categor√≠a creada: {categoria.nombre_categoria}")
        else:
            print(f"üìÅ Categor√≠a existente: {categoria.nombre_categoria}")
    
    # Crear servicios de prueba
    servicios_data = [
        {
            'nombre_servicio': 'Reparaci√≥n de Computadores',
            'descripcion': 'Servicio t√©cnico especializado en reparaci√≥n y mantenimiento de equipos de c√≥mputo',
            'precio_base': 50000.00,
            'categoria': categorias['Tecnolog√≠a'],
            'ubicacion': 'Bogot√° Centro',
            'activo': True
        },
        {
            'nombre_servicio': 'Plomer√≠a Residencial',
            'descripcion': 'Instalaci√≥n y reparaci√≥n de sistemas de plomer√≠a para el hogar',
            'precio_base': 75000.00,
            'categoria': categorias['Hogar'],
            'ubicacion': 'Zona Norte Bogot√°',
            'activo': True
        },
        {
            'nombre_servicio': 'Consultas M√©dicas Generales',
            'descripcion': 'Atenci√≥n m√©dica general y consultas de medicina preventiva',
            'precio_base': 120000.00,
            'categoria': categorias['Salud'],
            'ubicacion': 'Chapinero',
            'activo': True
        },
        {
            'nombre_servicio': 'Clases de Ingl√©s Personalizadas',
            'descripcion': 'Ense√±anza de ingl√©s con metodolog√≠a personalizada para todos los niveles',
            'precio_base': 40000.00,
            'categoria': categorias['Educaci√≥n'],
            'ubicacion': 'Zona Rosa',
            'activo': True
        },
        {
            'nombre_servicio': 'Servicio de Domicilios',
            'descripcion': 'Entrega r√°pida y segura de paquetes y documentos en la ciudad',
            'precio_base': 15000.00,
            'categoria': categorias['Transporte'],
            'ubicacion': 'Toda Bogot√°',
            'activo': True
        },
        {
            'nombre_servicio': 'Desarrollo Web',
            'descripcion': 'Creaci√≥n de sitios web y aplicaciones web modernas y responsivas',
            'precio_base': 500000.00,
            'categoria': categorias['Tecnolog√≠a'],
            'ubicacion': 'Remoto/Bogot√°',
            'activo': True
        },
        {
            'nombre_servicio': 'Limpieza Profunda de Hogar',
            'descripcion': 'Servicio completo de aseo y desinfecci√≥n para el hogar',
            'precio_base': 80000.00,
            'categoria': categorias['Hogar'],
            'ubicacion': 'Suba y alrededores',
            'activo': True
        },
        {
            'nombre_servicio': 'Fisioterapia a Domicilio',
            'descripcion': 'Sesiones de fisioterapia y rehabilitaci√≥n en la comodidad de su hogar',
            'precio_base': 90000.00,
            'categoria': categorias['Salud'],
            'ubicacion': 'Zona Sur Bogot√°',
            'activo': True
        }
    ]
    
    servicios_creados = 0
    for servicio_data in servicios_data:
        servicio, created = Servicios.objects.get_or_create(
            nombre_servicio=servicio_data['nombre_servicio'],
            defaults=servicio_data
        )
        
        if created:
            servicios_creados += 1
            print(f"‚úÖ Servicio creado: {servicio.nombre_servicio} - ${servicio.precio_base:,.0f}")
        else:
            print(f"üìã Servicio existente: {servicio.nombre_servicio}")
    
    print(f"\nüéâ ¬°Completado! Se crearon {servicios_creados} nuevos servicios")
    print(f"üìä Total de servicios en la base de datos: {Servicios.objects.count()}")
    print(f"üìÅ Total de categor√≠as: {Categoria.objects.count()}")

if __name__ == '__main__':
    print("üöÄ Iniciando creaci√≥n de servicios de prueba...\n")
    crear_servicios_prueba()
    print("\n‚ú® Servicios listos para testear favoritos!")