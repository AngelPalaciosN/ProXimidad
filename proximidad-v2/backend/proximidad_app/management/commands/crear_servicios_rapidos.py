#!/usr/bin/env python
"""
Comando de Django management para crear servicios r√°pidamente para usuarios proveedores
"""
from django.core.management.base import BaseCommand, CommandError
from django.utils import timezone
from decimal import Decimal
import random

from proximidad_app.models import Usuario, Categoria, Servicios


class Command(BaseCommand):
    help = 'Crea servicios de ejemplo para usuarios proveedores existentes'

    def add_arguments(self, parser):
        parser.add_argument(
            '--proveedor-id',
            type=int,
            help='ID espec√≠fico del proveedor (opcional, si no se especifica usa todos los proveedores)'
        )
        parser.add_argument(
            '--cantidad',
            type=int,
            default=5,
            help='Cantidad de servicios a crear por proveedor (default: 5)'
        )
        parser.add_argument(
            '--categoria',
            type=str,
            help='Nombre espec√≠fico de categor√≠a (opcional)'
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üöÄ Iniciando creaci√≥n de servicios r√°pidos...')
        )
        
        # Verificar o crear categor√≠as b√°sicas
        self.crear_categorias_basicas()
        
        # Obtener proveedores
        if options['proveedor_id']:
            try:
                proveedores = [Usuario.objects.get(
                    id=options['proveedor_id'], 
                    tipo_usuario='proveedor'
                )]
                self.stdout.write(
                    f"Proveedor seleccionado: {proveedores[0].nombre_completo}"
                )
            except Usuario.DoesNotExist:
                raise CommandError(f'Proveedor con ID {options["proveedor_id"]} no encontrado')
        else:
            proveedores = Usuario.objects.filter(tipo_usuario='proveedor')
            if not proveedores.exists():
                raise CommandError('No hay usuarios proveedores en la base de datos')
            
            self.stdout.write(
                f"Proveedores encontrados: {proveedores.count()}"
            )
        
        # Obtener categor√≠as
        if options['categoria']:
            try:
                categorias = [Categoria.objects.get(nombre_categoria__icontains=options['categoria'])]
            except Categoria.DoesNotExist:
                raise CommandError(f'Categor√≠a "{options["categoria"]}" no encontrada')
        else:
            categorias = Categoria.objects.filter(activo=True)
            if not categorias.exists():
                raise CommandError('No hay categor√≠as activas en la base de datos')
        
        # Crear servicios
        cantidad = options['cantidad']
        total_creados = 0
        
        for proveedor in proveedores:
            self.stdout.write(f"\nüë®‚Äçüíº Creando servicios para: {proveedor.nombre_completo}")
            
            servicios_creados = self.crear_servicios_para_proveedor(
                proveedor, categorias, cantidad
            )
            total_creados += servicios_creados
            
            self.stdout.write(
                self.style.SUCCESS(f"   ‚úÖ {servicios_creados} servicios creados")
            )
        
        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ ¬°Completado! Total de servicios creados: {total_creados}'
            )
        )

    def crear_categorias_basicas(self):
        """Crear categor√≠as b√°sicas si no existen"""
        categorias_basicas = [
            {
                'nombre_categoria': 'Tecnolog√≠a',
                'descripcion_categoria': 'Servicios relacionados con tecnolog√≠a e inform√°tica',
                'icono': 'fas fa-laptop-code',
                'color': '#007bff'
            },
            {
                'nombre_categoria': 'Educaci√≥n',
                'descripcion_categoria': 'Servicios educativos y de formaci√≥n',
                'icono': 'fas fa-graduation-cap',
                'color': '#28a745'
            },
            {
                'nombre_categoria': 'Consultor√≠a',
                'descripcion_categoria': 'Servicios de consultor√≠a y asesor√≠a',
                'icono': 'fas fa-user-tie',
                'color': '#6f42c1'
            },
            {
                'nombre_categoria': 'Dise√±o',
                'descripcion_categoria': 'Servicios de dise√±o gr√°fico y creativo',
                'icono': 'fas fa-palette',
                'color': '#e83e8c'
            },
            {
                'nombre_categoria': 'Salud',
                'descripcion_categoria': 'Servicios relacionados con salud y bienestar',
                'icono': 'fas fa-heartbeat',
                'color': '#dc3545'
            },
            {
                'nombre_categoria': 'Hogar',
                'descripcion_categoria': 'Servicios para el hogar y mantenimiento',
                'icono': 'fas fa-home',
                'color': '#fd7e14'
            }
        ]
        
        for cat_data in categorias_basicas:
            categoria, created = Categoria.objects.get_or_create(
                nombre_categoria=cat_data['nombre_categoria'],
                defaults=cat_data
            )
            if created:
                self.stdout.write(f"üìÅ Categor√≠a creada: {categoria.nombre_categoria}")

    def crear_servicios_para_proveedor(self, proveedor, categorias, cantidad):
        """Crear servicios para un proveedor espec√≠fico"""
        servicios_templates = [
            # Tecnolog√≠a
            {
                'nombre_servicio': 'Desarrollo Web Personalizado',
                'descripcion': 'Desarrollo de sitios web modernos y responsivos usando las √∫ltimas tecnolog√≠as. Incluye dise√±o UX/UI, desarrollo frontend y backend, optimizaci√≥n SEO y hosting.',
                'precio_base': Decimal(str(random.randint(800000, 2500000))),
                'categoria_preferida': 'Tecnolog√≠a'
            },
            {
                'nombre_servicio': 'Consultor√≠a en Transformaci√≥n Digital',
                'descripcion': 'Asesor√≠a especializada para empresas que buscan digitalizar sus procesos. An√°lisis de necesidades, implementaci√≥n de soluciones tecnol√≥gicas y capacitaci√≥n del personal.',
                'precio_base': Decimal(str(random.randint(1200000, 3000000))),
                'categoria_preferida': 'Consultor√≠a'
            },
            {
                'nombre_servicio': 'Aplicaciones M√≥viles Nativas',
                'descripcion': 'Desarrollo de aplicaciones m√≥viles para Android e iOS con funcionalidades avanzadas, integraci√≥n con APIs y dise√±o intuitivo.',
                'precio_base': Decimal(str(random.randint(1500000, 4000000))),
                'categoria_preferida': 'Tecnolog√≠a'
            },
            {
                'nombre_servicio': 'Cursos de Programaci√≥n Online',
                'descripcion': 'Formaci√≥n personalizada en programaci√≥n web, m√≥vil y de escritorio. Incluye ejercicios pr√°cticos, proyectos reales y certificaci√≥n.',
                'precio_base': Decimal(str(random.randint(300000, 800000))),
                'categoria_preferida': 'Educaci√≥n'
            },
            {
                'nombre_servicio': 'Dise√±o de Identidad Corporativa',
                'descripcion': 'Creaci√≥n completa de identidad visual para empresas: logo, paleta de colores, tipograf√≠a, papeler√≠a y manual de marca.',
                'precio_base': Decimal(str(random.randint(600000, 1500000))),
                'categoria_preferida': 'Dise√±o'
            },
            {
                'nombre_servicio': 'Mantenimiento de Sistemas Inform√°ticos',
                'descripcion': 'Soporte t√©cnico preventivo y correctivo para equipos de c√≥mputo, redes y servidores. Incluye diagn√≥stico, reparaci√≥n y optimizaci√≥n.',
                'precio_base': Decimal(str(random.randint(200000, 600000))),
                'categoria_preferida': 'Tecnolog√≠a'
            },
            {
                'nombre_servicio': 'Marketing Digital y SEO',
                'descripcion': 'Estrategias integrales de marketing digital: gesti√≥n de redes sociales, campa√±as publicitarias, posicionamiento SEO y an√°lisis de m√©tricas.',
                'precio_base': Decimal(str(random.randint(500000, 1800000))),
                'categoria_preferida': 'Consultor√≠a'
            },
            {
                'nombre_servicio': 'Instalaci√≥n de Redes y Cableado',
                'descripcion': 'Instalaci√≥n y configuraci√≥n de redes empresariales, cableado estructurado, WiFi empresarial y sistemas de seguridad inform√°tica.',
                'precio_base': Decimal(str(random.randint(400000, 1200000))),
                'categoria_preferida': 'Tecnolog√≠a'
            },
            {
                'nombre_servicio': 'Dise√±o Gr√°fico y Publicitario',
                'descripcion': 'Creaci√≥n de material publicitario impreso y digital: brochures, cat√°logos, banners, posts para redes sociales y presentaciones corporativas.',
                'precio_base': Decimal(str(random.randint(250000, 800000))),
                'categoria_preferida': 'Dise√±o'
            },
            {
                'nombre_servicio': 'Automatizaci√≥n de Procesos',
                'descripcion': 'Implementaci√≥n de soluciones de automatizaci√≥n para optimizar procesos empresariales usando RPA, integraci√≥n de sistemas y flujos de trabajo.',
                'precio_base': Decimal(str(random.randint(1000000, 2800000))),
                'categoria_preferida': 'Consultor√≠a'
            },
            {
                'nombre_servicio': 'Clases Particulares de Matem√°ticas',
                'descripcion': 'Tutor√≠a personalizada en matem√°ticas para estudiantes de primaria, secundaria y universidad. Metodolog√≠a adaptada a cada estudiante.',
                'precio_base': Decimal(str(random.randint(80000, 200000))),
                'categoria_preferida': 'Educaci√≥n'
            },
            {
                'nombre_servicio': 'Terapia Psicol√≥gica Individual',
                'descripcion': 'Sesiones de terapia psicol√≥gica para adultos, enfoque cognitivo-conductual, manejo de ansiedad, depresi√≥n y desarrollo personal.',
                'precio_base': Decimal(str(random.randint(150000, 300000))),
                'categoria_preferida': 'Salud'
            },
            {
                'nombre_servicio': 'Reparaci√≥n de Electrodom√©sticos',
                'descripcion': 'Servicio t√©cnico especializado en reparaci√≥n de electrodom√©sticos de l√≠nea blanca y peque√±os electrodom√©sticos. Diagn√≥stico gratuito.',
                'precio_base': Decimal(str(random.randint(80000, 250000))),
                'categoria_preferida': 'Hogar'
            },
            {
                'nombre_servicio': 'Fotograf√≠a de Eventos',
                'descripcion': 'Cobertura fotogr√°fica profesional para eventos sociales y corporativos. Incluye edici√≥n digital y entrega en alta resoluci√≥n.',
                'precio_base': Decimal(str(random.randint(400000, 1200000))),
                'categoria_preferida': 'Dise√±o'
            },
            {
                'nombre_servicio': 'Coaching Empresarial',
                'descripcion': 'Coaching ejecutivo y empresarial para desarrollo de liderazgo, gesti√≥n de equipos y mejora de productividad organizacional.',
                'precio_base': Decimal(str(random.randint(300000, 900000))),
                'categoria_preferida': 'Consultor√≠a'
            }
        ]
        
        servicios_creados = 0
        servicios_disponibles = servicios_templates.copy()
        random.shuffle(servicios_disponibles)
        
        for i in range(min(cantidad, len(servicios_disponibles))):
            template = servicios_disponibles[i]
            
            # Buscar categor√≠a preferida o usar una aleatoria
            try:
                categoria = categorias.filter(
                    nombre_categoria__icontains=template['categoria_preferida']
                ).first()
                if not categoria:
                    categoria = random.choice(categorias)
            except:
                categoria = random.choice(categorias)
            
            # Personalizar el nombre del servicio para evitar duplicados
            nombre_base = template['nombre_servicio']
            sufijos = ['', ' Premium', ' Express', ' Plus', ' Pro', ' Avanzado', ' B√°sico']
            nombre_final = nombre_base + random.choice(sufijos)
            
            # Verificar si ya existe el servicio
            if Servicios.objects.filter(
                nombre_servicio=nombre_final, 
                proveedor=proveedor
            ).exists():
                nombre_final = f"{nombre_base} - {random.randint(1, 999)}"
            
            # Crear el servicio
            servicio = Servicios.objects.create(
                nombre_servicio=nombre_final,
                descripcion=template['descripcion'],
                precio_base=template['precio_base'],
                categoria=categoria,
                proveedor=proveedor,
                activo=True,
                destacado=random.choice([True, False, False, False]),  # 25% destacados
                ubicacion=proveedor.direccion,
                views=random.randint(0, 100)
            )
            
            servicios_creados += 1
            self.stdout.write(f"   üì¶ {servicio.nombre_servicio} - ${servicio.precio_base:,.0f}")
        
        return servicios_creados