#!/usr/bin/env python
"""
Script para crear servicios de ejemplo en la base de datos
"""
import os
import sys
import django
from decimal import Decimal

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from proximidad_app.models import Usuario, Categoria, Servicios

def crear_categorias():
    """Crear categor√≠as de ejemplo"""
    categorias = [
        {"nombre_categoria": "Tecnolog√≠a", "descripcion_categoria": "Servicios relacionados con tecnolog√≠a e inform√°tica"},
        {"nombre_categoria": "Dise√±o", "descripcion_categoria": "Servicios de dise√±o gr√°fico y creativo"},
        {"nombre_categoria": "Marketing", "descripcion_categoria": "Servicios de marketing digital y publicidad"},
        {"nombre_categoria": "Consultor√≠a", "descripcion_categoria": "Servicios de consultor√≠a empresarial"},
        {"nombre_categoria": "Educaci√≥n", "descripcion_categoria": "Servicios educativos y de capacitaci√≥n"},
        {"nombre_categoria": "Salud", "descripcion_categoria": "Servicios relacionados con salud y bienestar"},
        {"nombre_categoria": "Construcci√≥n", "descripcion_categoria": "Servicios de construcci√≥n y remodelaci√≥n"},
        {"nombre_categoria": "Finanzas", "descripcion_categoria": "Servicios financieros y contables"},
    ]
    
    for cat_data in categorias:
        categoria, created = Categoria.objects.get_or_create(
            nombre_categoria=cat_data["nombre_categoria"],
            defaults=cat_data
        )
        if created:
            print(f"‚úÖ Categor√≠a creada: {categoria.nombre_categoria}")
        else:
            print(f"‚ÑπÔ∏è  Categor√≠a ya existe: {categoria.nombre_categoria}")

def crear_usuarios_proveedores():
    """Crear usuarios proveedores de ejemplo"""
    proveedores = [
        {
            "nombre_completo": "Juan P√©rez Garc√≠a",
            "correo_electronico": "juan.perez@ejemplo.com",
            "telefono": "3001234567",
            "direccion": "Calle 123 #45-67, Bogot√°",
            "cedula": "12345678",
            "tipo_usuario": "proveedor"
        },
        {
            "nombre_completo": "Mar√≠a Gonz√°lez L√≥pez",
            "correo_electronico": "maria.gonzalez@ejemplo.com",
            "telefono": "3007654321",
            "direccion": "Carrera 50 #30-15, Medell√≠n",
            "cedula": "23456789",
            "tipo_usuario": "proveedor"
        },
        {
            "nombre_completo": "Carlos Rodr√≠guez S√°nchez",
            "correo_electronico": "carlos.rodriguez@ejemplo.com",
            "telefono": "3009876543",
            "direccion": "Avenida 80 #25-40, Cali",
            "cedula": "34567890",
            "tipo_usuario": "proveedor"
        },
        {
            "nombre_completo": "Ana Mar√≠a Herrera",
            "correo_electronico": "ana.herrera@ejemplo.com",
            "telefono": "3005432109",
            "direccion": "Calle 70 #15-20, Barranquilla",
            "cedula": "45678901",
            "tipo_usuario": "proveedor"
        },
        {
            "nombre_completo": "Luis Fernando Torres",
            "correo_electronico": "luis.torres@ejemplo.com",
            "telefono": "3008765432",
            "direccion": "Carrera 15 #85-30, Bogot√°",
            "cedula": "56789012",
            "tipo_usuario": "proveedor"
        }
    ]
    
    for prov_data in proveedores:
        usuario, created = Usuario.objects.get_or_create(
            correo_electronico=prov_data["correo_electronico"],
            defaults=prov_data
        )
        if created:
            print(f"‚úÖ Proveedor creado: {usuario.nombre_completo}")
        else:
            print(f"‚ÑπÔ∏è  Proveedor ya existe: {usuario.nombre_completo}")

def crear_servicios():
    """Crear servicios de ejemplo"""
    servicios = [
        {
            "nombre_servicio": "Desarrollo Web Completo",
            "descripcion": "Creaci√≥n de sitios web profesionales y responsivos con tecnolog√≠as modernas como React, Vue.js o Angular. Incluye dise√±o, desarrollo, testing y deployment.",
            "precio_base": Decimal("2500000"),
            "categoria": "Tecnolog√≠a",
            "proveedor": "juan.perez@ejemplo.com"
        },
        {
            "nombre_servicio": "Dise√±o de Identidad Corporativa",
            "descripcion": "Dise√±o completo de identidad visual para empresas: logo, papeler√≠a, manual de marca, y aplicaciones digitales.",
            "precio_base": Decimal("1200000"),
            "categoria": "Dise√±o",
            "proveedor": "maria.gonzalez@ejemplo.com"
        },
        {
            "nombre_servicio": "Campa√±a de Marketing Digital",
            "descripcion": "Estrategia completa de marketing digital: SEO, SEM, redes sociales, email marketing y an√°lisis de resultados.",
            "precio_base": Decimal("1800000"),
            "categoria": "Marketing",
            "proveedor": "carlos.rodriguez@ejemplo.com"
        },
        {
            "nombre_servicio": "Consultor√≠a Empresarial",
            "descripcion": "Asesor√≠a integral para optimizaci√≥n de procesos empresariales, an√°lisis financiero y estrategias de crecimiento.",
            "precio_base": Decimal("3000000"),
            "categoria": "Consultor√≠a",
            "proveedor": "ana.herrera@ejemplo.com"
        },
        {
            "nombre_servicio": "Desarrollo de Apps M√≥viles",
            "descripcion": "Creaci√≥n de aplicaciones m√≥viles nativas o h√≠bridas para Android e iOS con dise√±o intuitivo y funcionalidades avanzadas.",
            "precio_base": Decimal("4000000"),
            "categoria": "Tecnolog√≠a",
            "proveedor": "luis.torres@ejemplo.com"
        },
        {
            "nombre_servicio": "Dise√±o UX/UI",
            "descripcion": "Dise√±o de experiencia de usuario y interfaces para aplicaciones web y m√≥viles, con focus en usabilidad y conversi√≥n.",
            "precio_base": Decimal("1500000"),
            "categoria": "Dise√±o",
            "proveedor": "maria.gonzalez@ejemplo.com"
        },
        {
            "nombre_servicio": "Automatizaci√≥n de Procesos",
            "descripcion": "Implementaci√≥n de soluciones de automatizaci√≥n para optimizar procesos empresariales y aumentar la eficiencia.",
            "precio_base": Decimal("2200000"),
            "categoria": "Tecnolog√≠a",
            "proveedor": "juan.perez@ejemplo.com"
        },
        {
            "nombre_servicio": "Gesti√≥n de Redes Sociales",
            "descripcion": "Administraci√≥n completa de redes sociales: creaci√≥n de contenido, community management y an√°lisis de m√©tricas.",
            "precio_base": Decimal("800000"),
            "categoria": "Marketing",
            "proveedor": "carlos.rodriguez@ejemplo.com"
        },
        {
            "nombre_servicio": "Capacitaci√≥n en Tecnolog√≠a",
            "descripcion": "Cursos y talleres personalizados en tecnolog√≠as modernas para equipos de trabajo y empresas.",
            "precio_base": Decimal("1000000"),
            "categoria": "Educaci√≥n",
            "proveedor": "luis.torres@ejemplo.com"
        },
        {
            "nombre_servicio": "An√°lisis de Datos",
            "descripcion": "Servicios de an√°lisis de datos empresariales, creaci√≥n de dashboards y reportes automatizados con herramientas como Power BI.",
            "precio_base": Decimal("1600000"),
            "categoria": "Consultor√≠a",
            "proveedor": "ana.herrera@ejemplo.com"
        }
    ]
    
    for serv_data in servicios:
        try:
            # Buscar categor√≠a
            categoria = Categoria.objects.get(nombre_categoria=serv_data["categoria"])
            
            # Buscar proveedor
            proveedor = Usuario.objects.get(correo_electronico=serv_data["proveedor"])
            
            # Crear servicio
            servicio, created = Servicios.objects.get_or_create(
                nombre_servicio=serv_data["nombre_servicio"],
                defaults={
                    "descripcion": serv_data["descripcion"],
                    "precio_base": serv_data["precio_base"],
                    "categoria": categoria,
                    "proveedor": proveedor,
                    "activo": True
                }
            )
            
            if created:
                print(f"‚úÖ Servicio creado: {servicio.nombre_servicio} - ${servicio.precio_base}")
            else:
                print(f"‚ÑπÔ∏è  Servicio ya existe: {servicio.nombre_servicio}")
                
        except Exception as e:
            print(f"‚ùå Error creando servicio {serv_data['nombre_servicio']}: {str(e)}")

def main():
    """Funci√≥n principal"""
    print("üöÄ Iniciando creaci√≥n de datos de ejemplo...")
    
    print("\nüìÅ Creando categor√≠as...")
    crear_categorias()
    
    print("\nüë• Creando usuarios proveedores...")
    crear_usuarios_proveedores()
    
    print("\nüõ†Ô∏è  Creando servicios...")
    crear_servicios()
    
    print("\n‚úÖ ¬°Datos de ejemplo creados exitosamente!")
    print("\nResumen:")
    print(f"- Categor√≠as: {Categoria.objects.count()}")
    print(f"- Usuarios: {Usuario.objects.count()}")
    print(f"- Servicios: {Servicios.objects.count()}")

if __name__ == "__main__":
    main()
